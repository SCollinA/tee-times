{"version":3,"sources":["store.js","LoadingPage.js","LoginPage.js","NavBar.js","TeeTimeForm.js","UserTeeTime.js","UserTeeTimes.js","Friend.js","Friends.js","Profile.js","Dashboard.js","TeeTimes.js","TeeTimesConnector.js","App.js","Root.js","serviceWorker.js","index.js"],"names":["setInterval","store","dispatch","updateTime","Date","getTeeTimeDate","isAdmin","currentDate","getMinutes","setMinutes","getHours","setDate","getDate","setHours","year","getFullYear","month","getMonth","day","dayOfTheWeek","getDay","hours","minutes","defaultState","data","user","userFriends","userTeeTimes","allUsers","allTeeTimes","selectedTeeTime","_id","teeType","date","golfers","guests","friendSearchTerm","isSearching","teeTimeSearch","Object","_Users_collinargo_Documents_Coding_projects_tee_times_front_Tee_Times_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","isLoading","ADD_USER","type","ADD_TEE_TIME","LOGIN_USER","LOGOUT_USER","REQUEST_DATA","RECEIVE_DATA","UPDATE_USER","SELECT_TEE_TIME","UPDATE_TIME","UPDATE_TEE_TIME","UPDATE_FRIEND_SEARCH","UPDATE_TEE_TIME_SEARCH","SEARCH_TEE_TIMES","REQUEST_FRIEND","APPROVE_FRIEND","DENY_FRIEND","DELETE_USER","DELETE_TEE_TIME","addUser","fetch","method","credentials","body","JSON","stringify","headers","Content-Type","then","res","json","receiveData","loginUser","logoutUser","requestData","filter","golfer","friends","find","friendID","pictureSrc","picture","concat","btoa","Buffer","from","_Users_collinargo_Documents_Coding_projects_tee_times_front_Tee_Times_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","map","updateUser","addTeeTime","teeTime","selectTeeTime","formattedTeeTime","updateTeeTime","updateFriendSearch","updateTeeTimeSearch","searchTeeTimes","requestFriend","approveFriend","console","log","denyFriend","deleteUser","deleteTeeTime","createStore","state","arguments","length","undefined","action","userType","window","__REDUX_DEVTOOLS_EXTENSION__","LoadingPage","props","react_default","a","createElement","className","src","alt","LoginPage","onSubmit","event","preventDefault","name","target","value","password","placeholder","onClick","includes","form","adminPassword","NavBar","NavLink","exact","to","TeeTimeForm","memberCount","guestMax","monthStrings","teeTimeDateString","unavailableTeeDates","availableTeeDates","getPossibleTeeDates","teeDate","_getAvailableOptions","getAvailableOptions","availableMonths","availableDays","availableHours","availableMinutes","objectSpread","construct","toConsumableArray","checked","onChange","updateForm","Fragment","teeMonth","key","teeDay","teeHour","teeMinute","toString","multiple","min","max","possibleTeeDates","cutoffDate","push","_getTeeTimeDate","forEach","sort","monthA","monthB","dayA","dayB","hourA","hourB","minuteA","minuteB","parseInt","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","selectedOptions","Symbol","iterator","next","done","selectedGolfer","err","return","guestCount","newTeeTime","UserTeeTime","isPast","editClassName","dateString","Intl","DateTimeFormat","weekday","hour","minute","format","location","pathname","history","golferID","join","UserTeeTimes","selectedDate","futureTeeTimes","_loop","dateField","teeTimeDate","setSeconds","setMilliseconds","_props$teeTimeSearch$","teeTimeSearchDate","getTime","v","matchingGolfers","_ret","teeTimeA","teeTimeB","pastTeeTimes","_props$selectedTeeTim","assign","Friend","isFriend","friend","requestedFriend","friendRequests","friendRequest","friendRequested","approvingFriend","approvedFriend","denyingFriend","deniedFriend","requestingFriend","Friends","autoComplete","urls","WeakMap","blobUrl","blob","has","get","url","URL","createObjectURL","set","Profile","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","newPassword","usernameSearchTerm","imageFile","imageLoaded","_this2","submitDiv","newUsername","currentPassword","myCanvas","document","getElementById","myImage","canvasContext","getContext","drawImage","toBlob","imageBlob","fr","FileReader","onload","newPicture","result","readAsBinaryString","setState","onReset","imageloaded","accept","onFocus","id","width","height","files","toLowerCase","Component","Dashboard","Route","path","render","routeProps","upcomingTeeTime","currentTeeTimeMessage","lastTeeTime","friendRequestsMessage","Profile_Profile","TeeTimes","isLoggedIn","Redirect","Switch","connector","connect","actions","withRouter","App","TeeTimesConnector","Root","_ref","es","BrowserRouter","component","Boolean","hostname","match","ReactDOM","src_Root","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e61c80ee.chunk.js","sourcesContent":["import { createStore } from 'redux'\n\n// const isDev = true\n// const isEv = true\n// const DB_URL = isEv ? 'https://api.evanprocter.com' : 'https://api.teetimes.collinargo.com'\n\nsetInterval(() => {\n    store.dispatch(updateTime(new Date())) \n}, 60 * 1000)\n\nexport const getTeeTimeDate = (isAdmin, currentDate) => {\n    // need to set this to within club hours here\n    // if (!isAdmin) {\n        // set year, months, day   holidays?\n        // e.g. tee times are every ten minutes\n        // set to next ten minute increment\n        if (currentDate.getMinutes() % 10 !== 0) {\n            currentDate.setMinutes(currentDate.getMinutes() + (10 - (currentDate.getMinutes() % 10)))\n        } else {\n            // this will get next ten min increment when at hh:00\n            currentDate.setMinutes(currentDate.getMinutes() + 10)\n        }\n        // e.g. they close at 4 PM\n        if (currentDate.getHours() >= 16) {\n            // set hours\n            // go to next day\n            currentDate.setDate(currentDate.getDate() + 1)\n            currentDate.setHours(8)\n            currentDate.setMinutes(0)\n        } \n        // e.g. they open at 8 AM\n        if (currentDate.getHours() < 8) {\n            currentDate.setHours(8)\n            currentDate.setMinutes(0)\n        }\n    // }\n    const date = {\n        year: currentDate.getFullYear(),\n        month: currentDate.getMonth(),\n        day: currentDate.getDate(),\n        dayOfTheWeek: currentDate.getDay(),\n        hours: currentDate.getHours(),\n        minutes: currentDate.getMinutes()\n    }\n    return date\n}\n\n// default state\nconst defaultState = {\n    currentDate: new Date(),\n    data: {\n        user: {},\n        userFriends: [],\n        userTeeTimes: [],\n        allUsers: [],\n        allTeeTimes: [],\n    },\n    isAdmin: false,\n    selectedTeeTime: {\n        _id: '',\n        teeType: '',\n        date: '',\n        golfers: [],\n        guests: 0\n    },\n    friendSearchTerm: '',\n    isSearching: false,\n    teeTimeSearch: {\n        teeType: 'walk',\n        date: {...getTeeTimeDate(false, new Date())},\n        golfers: [],\n        guests: 0\n    },\n    isLoading: false,\n}\n\n// CREATE USER\nconst ADD_USER = {\n    type: 'ADD_USER'\n}\n\nconst ADD_TEE_TIME = {\n    type: 'ADD_TEE_TIME'\n}\n\nconst LOGIN_USER = {\n    type: 'LOGIN_USER'\n}\n\nconst LOGOUT_USER = {\n    type: 'LOGOUT_USER'\n}\n\nconst REQUEST_DATA = {\n    type: 'REQUEST_DATA'\n}\n\n// RETRIEVE USER DATA\nconst RECEIVE_DATA = {\n    type: 'RECEIVE_DATA'\n}\n\n// UPDATE USER DATA\nconst UPDATE_USER = {\n    type: 'UPDATE_USER'\n}\n\nconst SELECT_TEE_TIME = {\n    type: 'SELECT_TEE_TIME'\n}\n\nconst UPDATE_TIME = {\n    type: 'UPDATE_TIME'\n}\n\nconst UPDATE_TEE_TIME = {\n    type: 'UPDATE_TEE_TIME'\n}\n\nconst UPDATE_FRIEND_SEARCH = {\n    type: 'UPDATE_FRIEND_SEARCH'\n}\n\nconst UPDATE_TEE_TIME_SEARCH = {\n    type: 'UPDATE_TEE_TIME_SEARCH'\n}\n\nconst SEARCH_TEE_TIMES = {\n    type: 'SEARCH_TEE_TIMES'\n}\n\nconst REQUEST_FRIEND = {\n    type: 'REQUEST_FRIEND'\n}\n\nconst APPROVE_FRIEND = {\n    type: 'APPROVE_FRIEND'\n}\n\nconst DENY_FRIEND = {\n    type: 'DENY_FRIEND'\n}\n\n// DELETE A SINGLE USER AND INFO\nconst DELETE_USER = {\n    type: 'DELETE_USER'\n}\n\nconst DELETE_TEE_TIME = {\n    type: 'DELETE_TEE_TIME'\n}\n\nexport const addUser = (user) => {\n    fetch(`/register`, {\n        method: 'post',\n        credentials: 'include',\n        body: JSON.stringify(user),\n        headers: {'Content-Type': 'application/json'}\n    })\n    .then(res => res.json())\n    .then(data => store.dispatch(receiveData(data)))\n    return {\n        ...ADD_USER, \n        isLoading: true\n    }\n} \n\nexport const loginUser = (user) => {\n    fetch(`/login`, {\n        method: 'post',\n        credentials: 'include',\n        body: JSON.stringify(user),\n        headers: {'Content-Type' : 'application/json'}\n    })\n    .then(res => res.json())\n    .then(data => store.dispatch(receiveData(data)))\n    return {\n        ...LOGIN_USER,\n        isLoading: true\n    }\n}\n\nexport const logoutUser = () => {\n    fetch(`/logout`, {\n        method: 'get',\n        credentials: 'include'\n    })\n    .then(res => res.json())\n    .then(data => store.dispatch(receiveData(data)))\n    return {\n        ...LOGOUT_USER,\n        isLoading: true\n    }\n}\n\nexport const requestData = () => {\n    fetch(`/data`, {\n        method: 'get',\n        credentials: 'include'\n    })\n    .then(res => res.json())\n    .then(data => store.dispatch(receiveData(data)))\n    return {\n        ...REQUEST_DATA,\n        isLoading: true\n    }\n}\n\nexport const receiveData = (data) => {\n    const userFriends = data.allUsers.filter(golfer => {\n        if (golfer._id === data.user._id) {\n            return false\n        } else {\n            return data.user.friends && data.user.friends.find(friendID => golfer._id === friendID)\n        }\n    })\n    return {\n        ...RECEIVE_DATA,\n        data: {\n            ...data,\n            user: {\n                ...data.user,\n                pictureSrc: data.user.picture && `data:image/png;base64,${btoa(Buffer.from(data.user.picture.data))}`\n            },\n            userFriends,\n            allUsers: [...data.allUsers.map(user => {\n                return {...user, pictureSrc: user.picture && `data:image/png;base64,${btoa(Buffer.from(user.picture.data))}`}\n            })]\n        },\n        isLoading: false\n    }\n}\n\nexport const updateUser = (user) => {\n    fetch(`/updateUser`, {\n        method: 'post',\n        credentials: 'include',\n        body: JSON.stringify(user),\n        headers: {'Content-Type': 'application/json'}\n    })\n    .then(res => res.json())\n    .then(data => store.dispatch(receiveData(data)))\n    return {\n        ...UPDATE_USER,\n        isLoading: true\n    }\n}\n\nexport const updateTime = (currentDate) => {\n    return {\n        ...UPDATE_TIME,\n        currentDate\n    }\n}\n\nexport const addTeeTime = (teeTime) => {\n    fetch(`/teetime`, {\n        method: 'post',\n        credentials: 'include',\n        body: JSON.stringify({teeTime}),\n        headers: {'Content-Type' : 'application/json'}\n    })\n    .then(res => res.json())\n    .then(data => store.dispatch(receiveData(data)))\n    return {\n        ...ADD_TEE_TIME,\n        isLoading: true\n    }\n}\n\nexport const selectTeeTime = (teeTime) => {\n    const date = new Date(teeTime.date)\n    const formattedTeeTime = {\n        ...teeTime, \n        date: {\n            year: date.getFullYear(),\n            month: date.getMonth(),\n            day: date.getDate(),\n            hours: date.getHours(),\n            minutes: date.getMinutes()\n        }\n    }\n    return {\n        ...SELECT_TEE_TIME,\n        teeTime: formattedTeeTime\n    }\n}\n\nexport const updateTeeTime = (teeTime) => {\n    fetch(`/updateTeeTime`, {\n        method: 'post',\n        credentials: 'include',\n        body: JSON.stringify({teeTime}),\n        headers: {'Content-Type': 'application/json'}\n    })\n    .then(res => res.json())\n    .then(data => store.dispatch(receiveData(data)))\n    return {\n        ...UPDATE_TEE_TIME,\n        isLoading: true\n    }\n}\n\nexport const updateFriendSearch = friendSearchTerm => {\n    return {\n        ...UPDATE_FRIEND_SEARCH,\n        friendSearchTerm\n    }\n}\n\nexport const updateTeeTimeSearch = teeTimeSearch => {\n    return {\n        ...UPDATE_TEE_TIME_SEARCH,\n        teeTimeSearch\n    }\n}\n\nexport const searchTeeTimes = () => {\n    return {\n        ...SEARCH_TEE_TIMES\n    }\n}\n\nexport const requestFriend = friends => {\n    fetch(`/requestFriend`, {\n        method: 'post',\n        credentials: 'include',\n        body: JSON.stringify(friends),\n        headers: {'Content-Type': 'application/json'}\n    })\n    .then(res => res.json())\n    .then(data => store.dispatch(receiveData(data)))\n    return {\n        ...REQUEST_FRIEND,\n        isLoading: true\n    }\n}\nexport const approveFriend = friends => {\n    console.log(friends)\n    fetch(`/approveFriend`, {\n        method: 'post',\n        credentials: 'include',\n        body: JSON.stringify(friends),\n        headers: {'Content-Type': 'application/json'}\n    })\n    .then(res => res.json())\n    .then(data => store.dispatch(receiveData(data)))\n    return {\n        ...APPROVE_FRIEND,\n        isLoading: true\n    }\n}\nexport const denyFriend = friends => {\n    fetch(`/denyFriend`, {\n        method: 'post',\n        credentials: 'include',\n        body: JSON.stringify(friends),\n        headers: {'Content-Type': 'application/json'}\n    })\n    .then(res => res.json())\n    .then(data => store.dispatch(receiveData(data)))\n    return {\n        ...DENY_FRIEND,\n        isLoading: true\n    }\n}\n\nexport const deleteUser = (user) => {\n    fetch(`/user`, {\n        method: 'delete',\n        credentials: 'include',\n        body: JSON.stringify({user}),\n        headers: {'Content-Type': 'application/json'}\n    })\n    .then(res => res.json())\n    .then(data => store.dispatch(receiveData(data)))\n    return {\n        ...DELETE_USER,\n        isLoading: true\n    }\n}\n\nexport const deleteTeeTime = (teeTime) => {\n    fetch(`/teetime`, {\n        method: 'delete',\n        credentials: 'include',\n        body: JSON.stringify({teeTime}),\n        headers: {'Content-Type' : 'application/json'}\n    })\n    .then(res => res.json())\n    .then(data => store.dispatch(receiveData(data)))\n    return {\n        ...DELETE_TEE_TIME,\n        isLoading: true\n    }\n}\n\n// ===========================================\n//      REDUCER\n// ===========================================\nconst teeTimes = (state=defaultState, action) => {\n    if (!action) {\n        return state\n    }\n    switch (action.type){\n        // CREATE\n        case ADD_USER.type:\n        return {\n            ...state,\n            isLoading: action.isLoading\n        }\n        case LOGIN_USER.type:\n        return {\n            ...defaultState,\n            isLoading: action.isLoading\n        }\n        case LOGOUT_USER.type:\n        return {\n            ...defaultState,\n            isLoading: action.isLoading\n        }\n        case UPDATE_USER.type:\n        return {\n            ...state,\n            isLoading: action.isLoading\n        }\n        case DELETE_USER.type:\n        return {\n            ...state,\n            isLoading: action.isLoading\n        }\n        case UPDATE_TIME.type:\n        return {\n            ...state,\n            currentDate: action.currentDate,\n            // update teeTimeSearch if it is less than currentTime and not currently searching\n            teeTimeSearch: !state.isSearching ? {\n                ...state.teeTimeSearch,\n                date: {\n                    year: state.teeTimeSearch.date.year < action.currentDate.getFullYear() ? action.currentDate.getFullYear() : state.teeTimeSearch.date.year,\n                    month: state.teeTimeSearch.date.month < action.currentDate.getMonth() ? action.currentDate.getMonth() : state.teeTimeSearch.date.month,\n                    day: state.teeTimeSearch.date.day < action.currentDate.getDate() ? action.currentDate.getDate() : state.teeTimeSearch.date.day,\n                    dayOfTheWeek: state.teeTimeSearch.date.dayOfTheWeek < action.currentDate.getDay() ? action.currentDate.getDay() : state.teeTimeSearch.date.dayOfTheWeek,\n                    hours: state.teeTimeSearch.date.hours< action.currentDate.getHours() ? action.currentDate.getHours() : state.teeTimeSearch.date.hours,\n                    minutes: state.teeTimeSearch.date.minutes < action.currentDate.getMinutes() ? action.currentDate.getMinutes() : state.teeTimeSearch.date.minutes,\n                }\n            } : state.teeTimeSearch\n        }\n        case ADD_TEE_TIME.type:\n        return {\n            ...state,\n            teeTimeSearch: defaultState.teeTimeSearch,\n            isLoading: action.isLoading\n        }\n        case SELECT_TEE_TIME.type:\n        return {\n            ...state,\n            // if the time is already selected than deselect it\n            selectedTeeTime: action.teeTime._id !== state.selectedTeeTime._id ? action.teeTime : defaultState.teeTimeSearch,\n            teeTimeSearch: action.teeTime._id !== state.selectedTeeTime._id ? action.teeTime : defaultState.teeTimeSearch\n        }\n        case UPDATE_TEE_TIME.type:\n        return {\n            ...state,\n            isLoading: action.isLoading\n        }\n        case DELETE_TEE_TIME.type:\n        return {\n            ...state,\n            isLoading: action.isLoading\n        }\n        case UPDATE_FRIEND_SEARCH.type:\n        return {\n            ...state,\n            friendSearchTerm: action.friendSearchTerm\n        }\n        case UPDATE_TEE_TIME_SEARCH.type:\n        return {\n            ...state,\n            // the teeTimeSearch will need to hold _id and other fields for the actual selectedTeeTime\n            // in order to update that teeTime on the backend\n            teeTimeSearch:  state.selectedTeeTime._id ? {...state.selectedTeeTime, ...action.teeTimeSearch} : action.teeTimeSearch,\n        }\n        case SEARCH_TEE_TIMES.type:\n        return {\n            ...state,\n            teeTimeSearch: !state.isSearching ? \n                            {teeType: '', date: {year: new Date().getFullYear(), month: 0, day: 0, hours: 0, minutes: -1}, golfers: [], guests: 0} : \n                            defaultState.teeTimeSearch,\n            isSearching: !state.isSearching,\n            selectedTeeTime: {}\n        }\n        case REQUEST_FRIEND.type:\n        return {\n            ...state,\n            isLoading: action.isLoading\n        }\n        case APPROVE_FRIEND.type:\n        return {\n            ...state,\n            isLoading: action.isLoading\n        }\n        case DENY_FRIEND.type:\n        return {\n            ...state,\n            isLoading: action.isLoading\n        }\n        case REQUEST_DATA.type:\n        return {\n            ...state,\n            isLoading: action.isLoading\n        }\n        case RECEIVE_DATA.type:\n        return {\n            ...state,\n            isLoading: action.isLoading,\n            isAdmin: action.data.user.userType === 'admin',\n            data: action.data,\n            friendSearchTerm: '',\n            // update selected tee time from data on the backend\n            selectedTeeTime: action.data.allTeeTimes.find(teeTime => teeTime._id === state.selectedTeeTime._id) || state.selectedTeeTime\n        }\n        default:\n        return state   \n    }\n}\n\nconst store = createStore(\n    teeTimes,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nexport default store;","import React from 'react'\n\nexport default function LoadingPage(props) {\n    return (\n        <div className='LoadingPage'>\n            <img src='./tee_shot.gif' alt='taking a shot' />\n        </div>\n    )\n}","import React from 'react'\n\nexport default function LoginPage(props) {\n    return (\n        <form className=\"LoginPage\" \n            onSubmit={event => {\n                event.preventDefault()\n                props.loginUser({\n                    name: event.target.name.value, \n                    password: event.target.password.value\n                })\n            }}\n        >\n            <label value='name' name='name'> \n                <input type='text' name='name' placeholder='name'/>\n            </label>\n            <label value='password' name='password'>\n                <input type='password' name='password' placeholder='password' />\n            </label>\n            <div className=\"userLogin\">\n                <input type='submit' value='login'/>\n                <input type='button' value='register' \n                    onClick={event => {\n                        if (!props.data.allUsers.map(user => user.name).includes(event.target.form[0].value)) {\n                            props.addUser({\n                                name: event.target.form[0].value, \n                                password: event.target.form[1].value, \n                                adminPassword: event.target.form[4].value,\n                                picture: null, \n                                userType: 'basic'\n                            })\n                        }\n                    }}\n                />\n            </div>\n            <div className='adminLogin'>\n                <input type='password' placeholder='admin password' name='adminPassword' /> \n                <input type='button' value='register as admin' \n                    onClick={event => {\n                        if (!props.data.allUsers.map(user => user.name).includes(event.target.form[0].value)) {\n                            props.addUser({\n                                name: event.target.form[0].value, \n                                password: event.target.form[1].value, \n                                adminPassword: event.target.form[4].value,\n                                picture: null, \n                                userType: 'admin'\n                            })\n                        }\n                    }}\n                />\n            </div>\n        </form>\n    )\n}","import React from 'react'\nimport {NavLink} from 'react-router-dom'\n\nexport default function NavBar(props) {\n    return (\n        <div className='NavBar'>\n            <NavLink className='navlink' exact to='/'>\n                <img src='./tee_hole.png' alt='a golf ball on a tee'/>\n            </NavLink>\n            <NavLink className='navlink' to='/profile'>\n                <img src={props.data.user.pictureSrc} alt='user profile'/>\n                <p>{`${props.data.user.name}${props.isAdmin ? ' - admin' : ''}`}</p>\n            </NavLink>\n            <NavLink className=\"navlink\" to='/teetimes'>Tee Times</NavLink>\n            <NavLink className=\"navlink\" to='/friends'>Friends</NavLink>\n            <input type=\"button\" value=\"Logout\" onClick={event => props.logoutUser(props.data.user)}/>\n        </div>\n    )\n}","import React from 'react'\nimport {getTeeTimeDate} from './store'\n\nexport default function TeeTimeForm(props){        \n    // this determines the number of golfers allowed\n    const memberCount = (props.teeTimeSearch.golfers && props.teeTimeSearch.golfers.length) || 0\n    const guestMax = props.isAdmin ? 4 - memberCount : 3 - memberCount\n\n    const monthStrings = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n    const dayStrings = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n    const {date} = props.teeTimeSearch\n    const teeTimeDateString = (props.selectedTeeTime._id || !props.isSearching) && \n    `${dayStrings[date.dayOfTheWeek]}, ${date.month + 1}-${date.day}-${date.year}, ${date.hours % 12 || 12}:${date.minutes > 9 ? date.minutes : `0${date.minutes}`} ${date.hours < 12 ? 'AM' : 'PM'}`\n    \n    // find the taken dates\n    const unavailableTeeDates = props.data.allTeeTimes.map(teeTime => new Date(teeTime.date))\n    // If searching, show tee times that are already taken\n    const availableTeeDates = props.isSearching ? unavailableTeeDates : \n                                    getPossibleTeeDates(props).filter(teeDate => {\n                                        return !unavailableTeeDates.includes(teeDate)\n                                    })\n    const {availableMonths, availableDays, availableHours, availableMinutes} = getAvailableOptions(availableTeeDates)\n    return (\n        <form \n        className={`TeeTimeForm\n            ${props.selectedTeeTime._id ? ' selectedTeeTimeForm' : ''}\n            ${props.isSearching ? ' searchingTeeTimes' : ''}`} \n            onSubmit={event => {\n                event.preventDefault()\n                // basic user's automatically added to teetime\n                const {date} = props.teeTimeSearch\n                const teeDate = [date.year, date.month, date.day, date.hours, date.minutes]\n                props.selectedTeeTime._id || props.addTeeTime({\n                    ...props.teeTimeSearch, \n                    date: new Date(...teeDate), \n                    golfers: [...props.teeTimeSearch.golfers]})\n            }}\n        >\n            <div className='teeWalkRide'>\n                <label>\n                    Walk<input type=\"checkbox\" name=\"walkride\" value=\"walk\" \n                    checked={props.teeTimeSearch.teeType === \"walk\"} \n                    onChange={event => updateForm(event, props)} />\n                </label>\n                <label>\n                    Ride<input type=\"checkbox\" name=\"walkride\" value=\"ride\" \n                    checked={props.teeTimeSearch.teeType === \"ride\"} \n                    onChange={event => updateForm(event, props)} />\n                </label>\n            </div>\n            <div className='teeDate'>\n                <h4>Select a date:</h4>\n                {props.isAdmin && (\n                <>    \n                    <label>\n                        Year:\n                        {props.teeTimeSearch.date.year}\n                    </label>\n                    <label>\n                        Month:\n                        {<select name='teeMonth' onChange={event => updateForm(event, props)}>\n                            {availableMonths.map(teeMonth => <option key={teeMonth} value={teeMonth}>{`${monthStrings[teeMonth]}`}</option>)}\n                        </select>}\n                    </label>\n                </>    \n                )}\n                <label>\n                    Day:\n                    <select name='teeDay' value={props.teeTimeSearch.date.day} onChange={event => updateForm(event, props)}>\n                        {props.isSearching && <option value='0'> - </option>}\n                        {availableDays.map(teeDay => <option key={teeDay} value={teeDay}>{`${teeDay}`}</option>)}\n                    </select>\n                </label>\n                <>\n                    <label>\n                        Hour:\n                        <select name='teeHour' value={props.teeTimeSearch.date.hours} onChange={event => updateForm(event, props)}>\n                            {props.isSearching && <option value='0'> - </option>}\n                            {availableHours.map(teeHour => <option key={teeHour} value={teeHour}>{`${teeHour % 12 || 12} ${teeHour < 12 ? 'AM' : 'PM'}`}</option>)}\n                        </select>\n                    </label>\n                        <label>\n                            Minute:\n                            <select name='teeMinute' value={props.teeTimeSearch.date.minutes} onChange={event => updateForm(event, props)}>\n                                {props.isSearching && <option value='-1'> - </option>}\n                                {availableMinutes.map(teeMinute => <option key={teeMinute} value={teeMinute}>{`${teeMinute.toString().length > 1 ? teeMinute : `0${teeMinute}`}`}</option>)}\n                            </select>\n                        </label>\n                </>\n                <h4>{!(props.selectedTeeTime._id || props.isSearching) && teeTimeDateString}</h4>\n            </div>\n            <div className='teeGolfers'>\n                <label>\n                    Select other members:\n                    <select name=\"golfers\" multiple \n                        onChange={event => {\n                            // to pass event to update form it must persist\n                            // persist will allow it to propogate\n                            // event.persist()\n                            updateForm(event, props)\n                        }}\n                        value={props.teeTimeSearch.golfers}\n                        >\n                        {props.isAdmin || props.isSearching ? \n                        props.data.allUsers.map(user => <option key={user._id} value={user._id}>{`${user.name}`}</option>) : \n                        props.data.userFriends.map(user => <option key={user._id} value={user._id}>{`${user.name}`}</option>)}\n                    </select>\n                </label>\n                <label>\n                    Number of guests:\n                    <input type=\"number\" name=\"guests\" \n                    min=\"0\" \n                    max={guestMax + 1} \n                    value={props.teeTimeSearch.guests || 0} \n                    onChange={event => updateForm(event, props)}/>\n                </label>\n            </div>\n            <div className='teeFormButtons'>\n                {!props.selectedTeeTime._id && <div className={`teeSearchButton${props.isSearching ? ' searchingTeeTimes' : ''}`}>\n                    <input type=\"button\" value={`${props.isSearching ? 'Disable ' : 'Enable '}Tee Time Search`} onClick={props.searchTeeTimes}/>\n                </div>}\n                {!(props.selectedTeeTime._id || \n                    props.isSearching) && \n                    <input \n                    type=\"submit\" \n                    value=\"Request Tee Time\" \n                    onClick={event => updateForm(event, props)}\n                    />\n                }\n            </div>\n        </form>\n    )\n}\n\nconst getPossibleTeeDates = (props) => {\n    const {isAdmin} = props\n    // this function filters all tee dates for those that match teetimesearch\n    // create new array to hold available tee times\n    let possibleTeeDates = []\n    const currentDate = new Date()\n    // this is where we could grant admin privileges to add tee times a year in advance\n    const cutoffDate = isAdmin ? new Date().getDate() + 7 : new Date().getDate() + 2\n    while (currentDate.getDate() < cutoffDate) {\n        possibleTeeDates.push(new Date(currentDate))\n        currentDate.setMinutes(currentDate.getMinutes() + 10)\n    } \n    possibleTeeDates = possibleTeeDates.map(teeDate => {\n        const {year, month, day, hours, minutes} = getTeeTimeDate(props.isAdmin, teeDate)\n        return new Date(year, month, day, hours, minutes)\n    })\n    return possibleTeeDates\n}\n\nconst getAvailableOptions = (availableTeeDates) => {\n    // create arrays to store available options\n    const availableMonths = []\n    const availableDays = []\n    const availableHours = []\n    const availableMinutes = []\n    // add available options to arrays if they do not already contain them\n    availableTeeDates.forEach(teeDate => {\n        availableMonths.includes(teeDate.getMonth()) || availableMonths.push(teeDate.getMonth())\n        availableDays.includes(teeDate.getDate()) || availableDays.push(teeDate.getDate())\n        availableHours.includes(teeDate.getHours()) || availableHours.push(teeDate.getHours())\n        availableMinutes.includes(teeDate.getMinutes()) || availableMinutes.push(teeDate.getMinutes())\n    })\n    availableMonths.sort((monthA, monthB) => monthA - monthB)\n    availableDays.sort((dayA, dayB) => dayA - dayB)\n    availableHours.sort((hourA, hourB) => hourA - hourB)\n    availableMinutes.sort((minuteA, minuteB) => minuteA - minuteB)\n    return {availableMonths, availableDays, availableHours, availableMinutes}\n}\n    \nconst updateForm = (event, props) => {\n    // TeeType\n    // if this checkbox was checked, apply the value, otherwise apply the old value, unless searching\n    const teeType = (event.target.checked && event.target.value) || \n        (props.isSearching ? '' : props.teeTimeSearch.teeType)\n    \n    // Date\n    const currentDate = new Date()\n    const year = currentDate.getFullYear() //event.target.form.teeYear.value\n    const month = props.isAdmin ? parseInt(event.target.form.teeMonth.value) : currentDate.getMonth()\n    const day = parseInt(event.target.form.teeDay.value)\n    currentDate.setDate(day)\n    const dayOfTheWeek = currentDate.getDay()\n    const hours = parseInt(event.target.form.teeHour.value)\n    const minutes = parseInt(event.target.form.teeMinute.value)\n    const date = {year, month, day, dayOfTheWeek, hours, minutes}\n\n    // Golfers\n    let golfers = []\n    for (let selectedGolfer of event.target.form.golfers.selectedOptions) {\n        golfers.push(selectedGolfer.value)\n    }\n\n    // let golfers = props.data.allUsers.filter(user => selectedGolferIDs.includes(user._id))       \n    golfers = props.isAdmin || props.isSearching ? golfers : [...golfers, props.data.user._id]\n\n    // Guests\n    const memberCount = golfers.length\n    const guestMax = props.isAdmin ? 5 - memberCount : 4 - memberCount\n    const guestCount = parseInt(event.target.form.guests.value)\n    const guests = guestCount > guestMax ? guestMax : guestCount\n\n    // New Tee Time\n    const newTeeTime = { teeType, date, golfers, guests }\n\n    // Update the teeTimeSearch control in store\n    props.updateTeeTimeSearch(newTeeTime)\n\n    // update the users tee time if one was selected\n    // overwrite date field below to create genuine Date() object\n    console.log(newTeeTime)\n    props.selectedTeeTime._id && \n    props.updateTeeTime({...props.selectedTeeTime, ...newTeeTime, date: new Date(year, month, day, hours, minutes)}\n    )\n}\n","import React from 'react'\n\nexport default function UserTeeTime(props) {\n    const {teeTime, isPast, isSearching} = props\n    const isSelected = teeTime._id === props.selectedTeeTime._id\n    const editClassName = isSelected ? ' selectedTeeTime' : ''\n    const teeDate = new Date(teeTime.date)\n    const dateOptions = {\n        year: 'numeric', \n        month: 'short', \n        day: 'numeric',\n        weekday: 'short',\n        hour: 'numeric',\n        minute: 'numeric'\n    }\n    const dateString = new Intl.DateTimeFormat('en-US', dateOptions).format(teeDate)\n    return (\n        <div key={teeTime._id} className={`teeTime${editClassName}`} \n        onClick={isPast || isSearching ? null : event => {\n            if (props.location.pathname !== '/teetimes') {\n                props.history.push('/teetimes')\n            } else {\n                props.selectTeeTime(teeTime)\n            }\n        }}>\n            <p>{dateString}</p>\n            <p>{teeTime.teeType}</p>\n            <p>{teeTime.golfers.filter(golferID => props.isAdmin || golferID !== props.data.user._id)\n                .map(golferID => {\n                    const golfer =  props.data.allUsers.find(golfer => golfer._id === golferID)\n                    return golfer.name\n                    }).join(', ')}\n            </p>\n            {teeTime.guests > 0 && <p>{`${teeTime.guests} guests`}</p>}\n            {props.selectedTeeTime._id === teeTime._id && <input type=\"button\" value=\"Remove Tee Time\" onClick={event => props.deleteTeeTime(props.selectedTeeTime)}/>}\n        </div>    \n    )\n}","import React from 'react'\nimport UserTeeTime from './UserTeeTime'\n\nexport default function UserTeeTimes(props) {\n    const currentDate = new Date()\n    let userTeeTimes = (props.isAdmin || props.isSearching) ? props.data.allTeeTimes : props.data.userTeeTimes\n    userTeeTimes = props.isSearching ? userTeeTimes.filter(teeTime => {\n        for (let dateField in props.teeTimeSearch) {\n            // if filtering on date\n            if (dateField === 'date') {\n                // teeTime has a Date object\n                // teeTimeSearch has a date object, hydrate it\n                const teeTimeDate = new Date(teeTime[dateField])\n                teeTimeDate.setSeconds(0)\n                teeTimeDate.setMilliseconds(0)\n                const {year, month, day, hours, minutes} = props.teeTimeSearch.date\n                const teeTimeSearchDate = new Date(\n                                                    year,\n                                                    month || teeTimeDate.getMonth(), // these will not be 0 or the value of the tee time\n                                                    day || teeTimeDate.getDate(), \n                                                    hours || teeTimeDate.getHours(), \n                                                    minutes !== -1 ? minutes : teeTimeDate.getMinutes()\n                                                )\n                // if there is a date selected and it matches\n                if (teeTimeSearchDate.getTime() !== new Date(year, 0, 0, 0, 0).getTime()) {\n                    if (teeTimeDate.getTime() !== teeTimeSearchDate.getTime()) {return false}\n                } \n            // filtering on golfers\n            } else if (dateField === 'golfers') {\n                const matchingGolfers = teeTime[dateField].filter(golfer => props.teeTimeSearch[dateField].map(golfer => golfer._id).includes(golfer._id))\n                // if there are golfers selected and some match tee times\n                if (props.teeTimeSearch.golfers.length !== 0 && matchingGolfers.length !== 0) {return false}\n            // filtering on guests or teeType\n            } else {\n                // there is a teeType selected and it's value equals the teetime we are checking\n                if (props.teeTimeSearch.teeType && teeTime.teeType !== props.teeTimeSearch.teeType) {return false}\n                else if (props.teeTimeSearch.guests > teeTime.guests) {return false}\n            }\n        }\n        return true\n    }) : userTeeTimes\n    const futureTeeTimes = userTeeTimes.filter(teeTime => new Date(teeTime.date) > currentDate)\n        .sort((teeTimeA, teeTimeB) => new Date(teeTimeA.date).getTime() > new Date(teeTimeB.date).getTime() ? 1 : -1)\n    const pastTeeTimes = userTeeTimes.filter(teeTime => new Date(teeTime.date) <= currentDate)\n        .sort((teeTimeA, teeTimeB) => new Date(teeTimeA.date).getTime() > new Date(teeTimeB.date).getTime() ? -1 : 1)\n    let selectedDate\n    if (props.selectedTeeTime._id) {\n        console.log(props.selectedTeeTime)\n        // if the selectedTeeTime date is not in the correct format\n        if (props.selectedTeeTime.date.year) {\n            const {year, month, day, hours, minutes} = props.selectedTeeTime.date\n            selectedDate = new Date(year, month, day, hours, minutes)\n        } else {\n            selectedDate = new Date(props.selectedTeeTime.date)\n        }\n    }\n    return (\n        props.selectedTeeTime._id ? \n        <UserTeeTime teeTime={{...props.selectedTeeTime, date: selectedDate}} {...props}/> : \n        (<div className={`UserTeeTimes`}>\n                <div className={`upcomingTeeTimes${props.isSearching ? ' searchingTeeTimes' : ''}`}>\n                    <h4>{'Upcoming Tee Times'}</h4>\n                    {futureTeeTimes.map(teeTime => {\n                        return <UserTeeTime key={teeTime._id} isPast={false} teeTime={teeTime} {...props}/>\n                    })}\n                </div>\n                <div className={`completedTeeTimes${props.isSearching ? ' searchingTeeTimes' : ''}`}>\n                    <h4>{'Completed Tee Times'}</h4>\n                    {pastTeeTimes.map(teeTime => {\n                        return <UserTeeTime key={teeTime._id} isPast={true} teeTime={teeTime} {...props}/>\n                    })}\n                </div>\n            </div>\n        )\n    )\n}","import React from 'react'\n\nexport default function Friend(props) {\n    const isFriend =props.data.userFriends.map(friend => friend._id).includes(props.golfer._id)\n    const requestedFriend = props.golfer.friendRequests.find(friendRequest => friendRequest === props.data.user._id)\n    const friendRequested = props.data.user.friendRequests.find(friendRequest => friendRequest === props.golfer._id)\n    return (\n        <div className='Friend'>\n            <img src={props.golfer.pictureSrc} alt={`User's friend ${props.golfer.name}`}/>\n            <h4>{props.golfer.name}</h4>\n            {/* depending on relationship, show various buttons */}\n            {((!isFriend\n            && friendRequested)\n            && \n                ( \n                    <>\n                        <input type='button' value='approve friend' onClick={() => props.approveFriend({approvingFriend: props.data.user, approvedFriend: props.golfer})}/>\n                        <input type='button' value='deny friend' onClick={() => props.denyFriend({denyingFriend: props.data.user, deniedFriend: props.golfer})}/>\n                    </>\n                )\n            ) ||\n            (!isFriend && \n            ((!requestedFriend\n            && \n            <input type='button' value='request friend' onClick={() => props.requestFriend({requestingFriend: props.data.user, requestedFriend: props.golfer})}/>) \n            ||\n            <p>friend requested</p>\n            ))}\n        </div>\n    )\n}","import React from 'react'\nimport Friend from './Friend'\n\nexport default function Friends(props) {\n   const friends = props.friends || props.data.allUsers\n    return (\n        <div className='Friends'>\n            {!props.friends && <div className='searchFriends'>\n                <input \n                    type='text' name='friendName' \n                    placeholder={'friend\\'s name'} \n                    value={props.friendSearchTerm} \n                    onChange={event => props.updateFriendSearch(event.target.value)}\n                    autoComplete='off'\n                    />\n            </div>}\n            {/* {props.friendSearchTerm === '' ? \n            props.d.map(friend => <Friend key={friend._id} golfer={friend} {...props}/>)\n            : */}\n            <div className=\"friendsList\">\n                {friends\n                .filter(golfer => golfer.name.includes(props.friendSearchTerm) && golfer._id !== props.data.user._id)\n                .map(friend => <Friend key={friend._id} golfer={friend} {...props}/>)}\n            </div>\n       </div>\n    )\n} ","import React, {Component} from 'react'\n// need stuff for picture manipulation\n// import ReactDOM from 'react-dom'\n// import Root from './Root';\n// import store from './store';\n\nlet urls = new WeakMap()\n\nlet blobUrl = blob => {\n  if (urls.has(blob)) {\n    return urls.get(blob)\n  } else {\n    let url = URL.createObjectURL(blob)  \n    urls.set(blob, url)\n    return url\n  }\n}\n\nexport default class Profile extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            // keep track of each field with this component\n            newPassword: '',\n            usernameSearchTerm: '',\n            imageFile: null,\n            imageLoaded: false,\n        }\n    }\n\n    render() {\n    const {props} = this\n    const submitDiv = (\n        <div className=\"submitDiv\">\n            <label>\n                Current password:\n                <input\n                    type='password' name='currentPassword'\n                    placeholder={'current password'}\n                    autoComplete='off'\n                />\n            </label>\n            <input type='submit' value='submit'/>\n            <input type='reset' value='reset'/>\n        </div>\n    )\n\n    return (\n        <form className='Profile'\n            onSubmit={event => {\n                event.preventDefault()\n                const newUsername = event.target.newUsername.value\n                const currentPassword = event.target.currentPassword.value\n                const newPassword = event.target.newPassword.value\n\n                if (this.state.imageLoaded) {\n                    const myCanvas = document.getElementById('myCanvas')\n                    const myImage = document.getElementById('myImage')\n                    const canvasContext = myCanvas.getContext('2d')\n                    console.log(myImage)\n                    // draw image takes (img, x, y, w, h)\n                    canvasContext.drawImage(myImage, 0, 0, 100, 100)\n                    myCanvas.toBlob((imageBlob) => {\n                        const fr = new FileReader()\n                        fr.onload = () => {\n                            // update the user\n                            props.updateUser({\n                                _id: props.data.user._id,\n                                name: props.data.user.name,\n                                newUsername,\n                                currentPassword,\n                                newPassword,\n                                newPicture: fr.result\n                            })\n                        }\n                        fr.readAsBinaryString(imageBlob)\n                    }, 'image/png', .5)\n                } else {\n                    props.updateUser({\n                        _id: props.data.user._id,\n                        name: props.data.user.name,\n                        newUsername,\n                        currentPassword,\n                        newPassword,\n                        newPicture: ''\n                    })\n                }\n                this.setState({\n                    newPassword: '',\n                    usernameSearchTerm: '',\n                    imageFile: null,\n                    imageLoaded: false,\n                })\n                event.target.newPicture.value = ''\n            }}\n            onReset={event => {\n                this.setState({newPassword: '', usernameSearchTerm: '', imageFile: null, imageloaded: false})\n                event.target.newPicture.value = ''\n            }}\n        >\n            {/* should change password, username, profile pic */}\n            {/* form with inputs labeled with current values*/}\n            <div className='changePicture'>\n                <label>\n                    Change picture:\n                    <input \n                        type='file' name='newPicture' accept='image/*' \n                        // onChange={() => this.setState({pictureUploaded: true})}\n                        onFocus={() => {\n                            this.setState({\n                                usernameSearchTerm: '',\n                                newPassword: ''\n                            })\n                        }}\n                    />\n                    {this.state.imageLoaded && <canvas id='myCanvas' width={100} height={100}/> } \n                    <img id='myImage' src={this.state.imageLoaded ? blobUrl(this.state.imageFile) : props.data.user.pictureSrc} \n                    alt='uploaded profile' width={100} height={100}/>\n                </label>\n                <input type='button' value='Upload' onClick={event => {\n                    const imageFile = event.target.form.newPicture.files[0]\n                    const imageLoaded = imageFile && true\n                    this.setState({imageFile, imageLoaded})\n                }}/>\n                {this.state.imageLoaded && submitDiv}\n            </div>\n            <div className='changeUsername'>\n                <label>\n                    Current username:\n                    {` ${props.data.user.name} `}\n                </label>\n                <label>\n                    {/* change user name */}\n                    <input \n                        type='text' name='newUsername'\n                        placeholder={'new username'}\n                        value={this.state.usernameSearchTerm}\n                        onChange={event => {\n                            this.setState({\n                                usernameSearchTerm: event.target.value,\n                            })\n                        }}\n                        autoComplete='off'\n                        onFocus={event => {\n                            this.setState({\n                                newPassword: '',\n                            })\n                        }}\n                    />\n                </label>\n                {(!props.data.allUsers.find(user => user.name.toLowerCase() === this.state.usernameSearchTerm.toLowerCase()) &&\n                this.state.usernameSearchTerm) &&\n                submitDiv}\n            </div>\n            <div className='changePassword'>\n                <label>\n                    Change password:\n                    <input \n                        type='password' name='newPassword'\n                        placeholder={'new password'}\n                        value={this.state.newPassword}\n                        onChange={event => {\n                            this.setState({\n                                newPassword: event.target.value\n                            })\n                        }}\n                        onFocus={event => {\n                            this.setState({\n                                usernameSearchTerm: '',\n                            })\n                        }}\n                        autoComplete='off'\n                    />\n                </label>\n                {this.state.newPassword && submitDiv}\n            </div>\n        </form>\n    )}\n}","import React from 'react'\nimport {Route} from 'react-router-dom'\nimport NavBar from './NavBar'\nimport TeeTimeForm from './TeeTimeForm'\nimport UserTeeTimes from './UserTeeTimes'\nimport Friends from './Friends'\nimport UserTeeTime from './UserTeeTime';\nimport Profile from './Profile';\n\nexport default function Dashboard(props) {\n    return (\n        <div className=\"Dashboard\">\n            <NavBar {...props} />\n            <Route exact path={'/'} render= {routeProps => {\n                const currentDate = new Date()\n                props.data.userTeeTimes.sort((teeTimeA, teeTimeB) => new Date(teeTimeA.date).getTime() < new Date(teeTimeB.date).getTime() ? -1 : 1)\n                const upcomingTeeTime = props.data.userTeeTimes.find(teeTime => new Date(teeTime.date) > currentDate)\n                const currentTeeTimeMessage = upcomingTeeTime ? `Your next upcoming tee time is:` : \n                `Your last tee time was:`\n                const lastTeeTime = props.data.userTeeTimes[0]\n                const friendRequests = props.data.allUsers.filter(user => props.data.user.friendRequests.includes(user._id))\n                const friendRequestsMessage = friendRequests.length > 0 ? \n                `You have ${friendRequests.length} new friend requests.` : 'You have no new friend requests.'\n                return(\n                    <div className='statusMessages'>\n                        <div className=\"teeTimeStatus\">\n                            <h4>{currentTeeTimeMessage}</h4>\n                            {(upcomingTeeTime &&\n                                <UserTeeTime teeTime={upcomingTeeTime} {...props}/>) ||\n                            (lastTeeTime &&\n                                <UserTeeTime teeTime={props.data.userTeeTimes[0]} {...props}/>) || \n                                <p>\n                                    No previous tee times. Click tee times to add one!\n                                </p>\n                            }\n                            {!upcomingTeeTime && <h4>Click Tee Times to make a new one!</h4>}\n                        </div>\n                        <div className=\"friendRequestStatus\">\n                            <h4>{friendRequestsMessage}</h4>\n                            {friendRequests.length > 0 &&\n                                <Friends friends={friendRequests} {...props}></Friends>}\n                            {/* {(friendRequests.length > 0 && \n                            friendRequests.map(friend => <Friend key={friend._id} golfer={friend} {...props}/>)) || */}\n                            <p>\n                                Click friends to add one!\n                            </p>}\n                        </div>\n                    </div>\n                )\n            }}/>\n            <Route exact path={'/profile'} render= {routeProps => {\n                return <Profile {...props}/>\n            }}/>\n            <Route exact path={'/teetimes'} render= {routeProps => {\n                return(\n                    <div className='teeTimePage'>\n                        <TeeTimeForm {...props}/>\n                        <UserTeeTimes {...props}/>\n                    </div>\n                )\n            }}/>\n            <Route exact path={'/friends'} render= {routeProps => {\n                return(\n                    <Friends {...props}/>\n                )\n            }}/>\n        </div>\n    )\n}","import React, { Component } from 'react'\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport LoadingPage from './LoadingPage'\nimport LoginPage from './LoginPage'\nimport Dashboard from './Dashboard'\n\nexport default class TeeTimes extends Component {\n    componentDidMount() {\n        this.props.requestData()\n    }\n\n    render() {\n        const {props} = this\n        const isLoggedIn = props.data.user && props.data.user._id\n        // if they are not logged in && (if they are not at /login && send them to login)\n        return (!isLoggedIn && (props.location.pathname !== '/login' && <Redirect to='/login'/>)) ||\n        (isLoggedIn && (props.location.pathname === '/login' && <Redirect to='/'/>)) || \n        ( \n            <div className=\"TeeTimes\" >\n                {!isLoggedIn && <h1>Tee Times</h1>}\n                {props.isLoading && <LoadingPage />}\n                <Switch>\n                    <Route \n                        exact\n                        path=\"/login\"\n                        render={routeProps => <LoginPage {...props}/>}\n                    />\n                    <Route\n                        path=\"/\"\n                        render={routeProps => <Dashboard {...props}/>}\n                    />\n                </Switch>\n            </div>\n        )\n    }\n}","import { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport * as actions from './store'\nimport TeeTimes from './TeeTimes'\n\nconst mapStateToProps = (state) => {\n    return state\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        // CREATE\n        addUser: (user) => {\n            dispatch(actions.addUser(user))\n        },\n        addTeeTime: (teeTime) => {\n            dispatch(actions.addTeeTime(teeTime))\n        },\n        loginUser: (user) => {\n            dispatch(actions.loginUser(user))\n        },\n        requestData: () => {\n            dispatch(actions.requestData())\n        },\n        logoutUser: () => {\n            dispatch(actions.logoutUser())\n        },\n        updateUser: (user) => {\n            dispatch(actions.updateUser(user))\n        },\n        selectTeeTime: (teeTime) => {\n            dispatch(actions.selectTeeTime(teeTime))\n        },\n        updateTeeTime: (teeTime) => {\n            dispatch(actions.updateTeeTime(teeTime))\n        },\n        updateFriendSearch: (friendSearchTerm) => {\n            dispatch(actions.updateFriendSearch(friendSearchTerm))\n        },\n        updateTeeTimeSearch: (teeTimeSearch) => {\n            dispatch(actions.updateTeeTimeSearch(teeTimeSearch))\n        },\n        searchTeeTimes: () => {\n            dispatch(actions.searchTeeTimes())\n        },\n        requestFriend: (friends) => {\n            dispatch(actions.requestFriend(friends))\n        },\n        approveFriend: (friends) => {\n            dispatch(actions.approveFriend(friends))\n        },\n        denyFriend: (friends) => {\n            dispatch(actions.denyFriend(friends))\n        },\n        deleteUser: (user) => {\n            dispatch(actions.deleteUser(user))\n        },\n        deleteTeeTime: (teeTime) => {\n            // double check\n            dispatch(actions.deleteTeeTime(teeTime))\n        } \n    }\n}\n\nconst connector = connect(mapStateToProps, mapDispatchToProps)\n\nexport default withRouter(connector(TeeTimes))","import React, { Component } from 'react';\nimport './App.css';\nimport TeeTimesConnector from './TeeTimesConnector';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <TeeTimesConnector />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport App from './App'\n\nconst Root = ({ store }) => (\n    <Provider store={store}>\n        <Router>\n            <Route path=\"/:filter?\" component={App} />\n        </Router>\n    </Provider>\n)\n\nRoot.propTypes = {\n    store: PropTypes.object.isRequired\n}\n\nexport default Root","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './Root';\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Root store={store} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}